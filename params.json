{"name":"Node-geocoder","tagline":"nodejs geocoding library ","body":"# node-geocoder\r\n\r\n[![Build Status](https://travis-ci.org/nchaulet/node-geocoder.png?branch=master)](https://travis-ci.org/nchaulet/node-geocoder)\r\n\r\nNode library for geocoding and reverse geocoding \r\n\r\nCan be use as a nodejs library or as global command\r\n\r\n## Installation and usage (geocoder command)\r\n\r\n```shell\r\nnpm install -g node-geocoder\r\ngeocoder --provider google 'Fornino, 187 Bedford Ave, Brooklyn, NY 11211'\r\n```\r\n\r\n## Installation (nodejs library)\r\n\r\n    npm install node-geocoder\r\n\r\n## Usage example\r\n\r\n```javascript\r\nvar geocoderProvider = 'google';\r\nvar httpAdapter = 'http';\r\n// optionnal\r\nvar extra = {\r\n    apiKey: 'YOUR_API_KEY', // for map quest\r\n    formatter: null         // 'gpx', 'string', ...\r\n};\r\n\r\nvar geocoder = require('node-geocoder').getGeocoder(geocoderProvider, httpAdapter, extra);\r\n\r\n// Using callback\r\ngeocoder.geocode('29 champs elysée paris', function(err, res) {\r\n    console.log(res);\r\n});\r\n\r\n// Or using Promise\r\ngeocoder.geocode('29 champs elysée paris')\r\n    .then(function(res) {\r\n        console.log(res);\r\n    })\r\n    .err(function(err) {\r\n        console.log(err);\r\n    });\r\n\r\n// output :\r\n[{\r\n    latitude: 48.8698679,\r\n    longitude: 2.3072976,\r\n    country: 'France',\r\n    countryCode: 'FR',\r\n    city: 'Paris',\r\n    zipcode: '75008',\r\n    streetName: 'Champs-Élysées',\r\n    streetNumber: '29',\r\n    state: 'Île de France',\r\n    stateCode: 'IDF'\r\n}]\r\n\r\n// Reverse example\r\n\r\n// Using callback\r\ngeocoder.reverse(45.767, 4.833, function(err, res) {\r\n    console.log(res);\r\n});\r\n\r\n// Or using Promise\r\ngeocoder.reverse(45.767, 4.833)\r\n    .then(function(res) {\r\n        console.log(res);\r\n    })\r\n    .err(function(err) {\r\n        console.log(err);\r\n    });\r\n\r\n```\r\n\r\n## Geocoder Provider\r\n\r\n* `google` : GoogleGeocoder support address geocoding and reverse geocoding, use `extra.clientId`and `extra.apiKey`(privateKey)for business licence, you can also use `extra.language` for specify language\r\n* `freegeoip` : FreegeoipGeocoder support ip geocoding\r\n* `datasciencetoolkit` : DataScienceToolkitGeocoder supports ip v4 geocoding and address geocoding, use `extra.host` for specify a local instance\r\n* `openstreetmap` : OpenStreetMapGeocoder support address geocoding and reverse geocoding\r\n* `mapquest` : MapQuestGeocoder support address geocoding and reverse geocoding need an apiKey\r\n* `openmapquest` : Open MapQuestGeocoder (based on OpenStreetMapGeocoder) support address geocoding and reverse geocoding need an apiKey\r\n* `agol` : ArcGis Online Geocoding service, supports geocoding and reverse.  Requires a client_id & client_secret\r\n* `tomtom`: TomTomGeocoder support address geocoding , you need to specify `extra.apiKey`\r\n\r\n## Http adapter\r\n\r\n* `http`: This adapter uses Http nodejs library (by default)\r\n* `https`: This adapter uses Https nodejs library\r\n\r\n## Formatter\r\n\r\n* `gpx`    : format result using GPX format\r\n* `string` : format result to an String array (you need to specify `extra.formatterPattern` key)\r\n    * `%P` country\r\n    * `%p` country code\r\n    * `%n` street number\r\n    * `%S` street name\r\n    * `%z` zip code\r\n    * `%T` State\r\n    * `%t` state code\r\n\r\n## More\r\n\r\nYou can improve this project by adding new geocoders or http adapters.\r\n\r\nTo run tests just `npm test`\r\n\r\nTo check code style install `jshint` and just run `jshint lib test\r\n\r\n### Extending node geocoder\r\n\r\nYou can add new geocoders by implementing the two method geocode & reverse:\r\n\r\n```javascript\r\nvar geocoder = {\r\n    geocode: function(value, callback) { },\r\n    reverse: function(lat, lng, callback) { }\r\n}\r\n```\r\n\r\nYou can also add formatter implementing this interface\r\n\r\n```javascript\r\nvar formatter = {\r\n    format: function(data) { return formattedData; },\r\n}\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}